<UserControl x:Class="CalculatorApp.UnitConverter"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:automation="using:CalculatorApp.Common.Automation"
			 xmlns:common="using:CalculatorApp.Common"
			 xmlns:controls="using:CalculatorApp.Controls"
			 xmlns:converters="using:CalculatorApp.Converters"
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:local="using:CalculatorApp"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
			 xmlns:triggers="using:CalculatorApp.Views.StateTriggers"
			 xmlns:vm="using:CalculatorApp.ViewModel"
			 xmlns:ios="http://platform.uno/ios"
			 xmlns:wasm="http://platform.uno/wasm"
			 xmlns:not_ios="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 d:DesignHeight="658"
			 d:DesignWidth="830"
			 DataContextChanged="OnDataContextChanged"
			 FlowDirection="LeftToRight"
			 Loaded="OnLoaded"
			 mc:Ignorable="d ios wasm">

	<UserControl.Resources>
		<common:VisibilityNegationConverter x:Key="VisibilityNegationConverter" />
		<common:AlwaysSelectedCollectionViewConverter x:Key="AlwaysSelectedConverter" />
		<common:ValidSelectedItemConverter x:Key="ValidSelectedItemConverter" />
		<converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
		<converters:BooleanToVisibilityNegationConverter x:Key="BooleanToVisibilityNegationConverter" />
		<!-- TODO UNO <automation:NarratorNotifier x:Name="NarratorNotifier" Announcement="{x:Bind Model.Announcement, Mode=OneWay}"/>-->

		<DataTemplate x:Key="UnitTemplate"
					  x:DataType="vm:Unit">
			<TextBlock Style="{ThemeResource BodyTextBlockStyle}"
					   Text="{x:Bind Name}"
					   TextWrapping="NoWrap" />
			<!--TODO UNO AutomationProperties.Name="{x:Bind AccessibleName}"-->
		</DataTemplate>

		<DataTemplate x:Key="SelectedUnitTemplate"
					  x:DataType="vm:Unit">
			<TextBlock Style="{ThemeResource BodyTextBlockStyle}"
					   FontWeight="SemiBold"
					   Text="{x:Bind Name}"
					   TextWrapping="NoWrap" />
			<!--TODO UNO AutomationProperties.Name="{x:Bind AccessibleName}"-->
		</DataTemplate>


		<ios:Style
			x:Key="ComboStyle"
			TargetType="ComboBox">
			<Setter Property="Padding" Value="12,0,0,0" />
			<Setter Property="MinHeight" Value="32" />
			<Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
			<Setter Property="Background" Value="{ThemeResource SystemControlBackgroundTransparentBrush}" />
			<Setter Property="BorderBrush" Value="{ThemeResource SystemControlForegroundBaseMediumLowBrush}" />
			<Setter Property="BorderThickness" Value="0" />
			<Setter Property="IsPopupFullscreen" Value="True" />
			<Setter Property="HorizontalContentAlignment" Value="Stretch" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ComboBox">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="32" />
							</Grid.ColumnDefinitions>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal" />
									<VisualState x:Name="PointerOver">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames
												Storyboard.TargetName="Background"
												Storyboard.TargetProperty="Background">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlPageBackgroundAltMediumBrush}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames
												Storyboard.TargetName="Background"
												Storyboard.TargetProperty="BorderBrush">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseMediumBrush}" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames
												Storyboard.TargetName="Background"
												Storyboard.TargetProperty="Background">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundListMediumBrush}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames
												Storyboard.TargetName="Background"
												Storyboard.TargetProperty="BorderBrush">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseMediumLowBrush}" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames
												Storyboard.TargetName="Background"
												Storyboard.TargetProperty="Background">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundBaseLowBrush}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames
												Storyboard.TargetName="Background"
												Storyboard.TargetProperty="BorderBrush">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseLowBrush}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames
												Storyboard.TargetName="HeaderContentPresenter"
												Storyboard.TargetProperty="Foreground">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames
												Storyboard.TargetName="ContentPresenter"
												Storyboard.TargetProperty="Foreground">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames
												Storyboard.TargetName="PlaceholderTextBlock"
												Storyboard.TargetProperty="Foreground">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames
												Storyboard.TargetName="DropDownGlyph"
												Storyboard.TargetProperty="Foreground">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="FocusStates">
									<VisualState x:Name="Focused">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames
												Storyboard.TargetName="HighlightBackground"
												Storyboard.TargetProperty="BorderBrush">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightTransparentBrush}" />
											</ObjectAnimationUsingKeyFrames>
											<DoubleAnimation
												Storyboard.TargetName="HighlightBackground"
												Storyboard.TargetProperty="Opacity"
												To="1"
												Duration="0" />
											<ObjectAnimationUsingKeyFrames
												Storyboard.TargetName="ContentPresenter"
												Storyboard.TargetProperty="Foreground">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames
												Storyboard.TargetName="PlaceholderTextBlock"
												Storyboard.TargetProperty="Foreground">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames
												Storyboard.TargetName="DropDownGlyph"
												Storyboard.TargetProperty="Foreground">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseMediumHighBrush}" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="FocusedPressed">
										<Storyboard>
											<DoubleAnimation
												Storyboard.TargetName="HighlightBackground"
												Storyboard.TargetProperty="Opacity"
												To="1"
												Duration="0" />
											<ObjectAnimationUsingKeyFrames
												Storyboard.TargetName="ContentPresenter"
												Storyboard.TargetProperty="Foreground">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames
												Storyboard.TargetName="PlaceholderTextBlock"
												Storyboard.TargetProperty="Foreground">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames
												Storyboard.TargetName="DropDownGlyph"
												Storyboard.TargetProperty="Foreground">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseMediumHighBrush}" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Unfocused" />
									<VisualState x:Name="PointerFocused" />
									<VisualState x:Name="FocusedDropDown">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames
												Storyboard.TargetName="PopupBorder"
												Storyboard.TargetProperty="Visibility"
												Duration="0">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<Visibility>Visible</Visibility>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="DropDownStates">
									<VisualState x:Name="Opened" />
									<VisualState x:Name="Closed" />
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<ContentPresenter
								x:Name="HeaderContentPresenter"
								x:DeferLoadStrategy="Lazy"
								Margin="{ThemeResource ComboBoxHeaderThemeMargin}"
								FlowDirection="{TemplateBinding FlowDirection}"
								FontWeight="{ThemeResource ComboBoxHeaderThemeFontWeight}"
								Visibility="Collapsed"
								Content="{TemplateBinding Header}"
								ContentTemplate="{TemplateBinding HeaderTemplate}" />
							<Border
								x:Name="Background"
								Grid.Row="1"
								Grid.ColumnSpan="2"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}" />
							<Border
								x:Name="HighlightBackground"
								Grid.Row="1"
								Grid.ColumnSpan="2"
								Background="{ThemeResource SystemControlHighlightListAccentLowBrush}"
								BorderBrush="{ThemeResource SystemControlHighlightBaseMediumLowBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								Opacity="0" />
							<ContentPresenter
								x:Name="ContentPresenter"
								Grid.Row="1"
								ContentTemplate="{TemplateBinding ItemTemplate}"
								ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
								Margin="{TemplateBinding Padding}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
								<TextBlock
									x:Name="PlaceholderTextBlock"
									Text="{TemplateBinding PlaceholderText}"
									Foreground="{ThemeResource SystemControlPageTextBaseHighBrush}" />
							</ContentPresenter>
							<FontIcon
								x:Name="DropDownGlyph"
								Grid.Row="1"
								Grid.Column="1"
								IsHitTestVisible="False"
								Margin="0,10,10,10"
								Foreground="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
								FontFamily="{ThemeResource SymbolThemeFontFamily}"
								FontSize="12"
								Glyph="&#xE0E5;"
								HorizontalAlignment="Right"
								VerticalAlignment="Center"
								AutomationProperties.AccessibilityView="Raw" />
							<Popup x:Name="Popup" IsLightDismissEnabled="True">
								<Popup.Child>
									<Border
										x:Name="PopupBorder"
										Background="{ThemeResource SystemControlBackgroundChromeMediumLowBrush}"
										Height="320"
										VerticalAlignment="Bottom">
										<Picker Height="320"
												VerticalAlignment="Top"
												Placeholder="{TemplateBinding PlaceholderText}"
												ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}"
												DisplayMemberPath="{TemplateBinding DisplayMemberPath}"
												ItemTemplate="{TemplateBinding ItemTemplate}"
												ItemsSource="{TemplateBinding ItemsSource}"
												ItemContainerStyle="{StaticResource PickerItemStyle}"
												SelectedItem="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
									</Border>
								</Popup.Child>
							</Popup>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</ios:Style>

		<ios:Style x:Key="PickerItemStyle" TargetType="SelectorItem">
			<Setter Property="FontSize" Value="22" />
			<Setter Property="FontWeight" Value="Medium" />
			<Setter Property="VerticalContentAlignment" Value="Center" />
			<Setter Property="HorizontalContentAlignment" Value="Center" />
			<Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="SelectorItem">
						<ContentPresenter
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							Content="{TemplateBinding Content}"
							ContentTemplate="{TemplateBinding ContentTemplate}"
							ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
							Foreground="{TemplateBinding Foreground}"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</ios:Style>

		<not_ios:Style x:Key="ComboStyle"
			   TargetType="ComboBox">
			<Setter Property="Padding"
					Value="12,0,0,0" />
			<Setter Property="MinHeight"
					Value="32" />
			<Setter Property="Foreground"
					Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
			<Setter Property="Background"
					Value="{ThemeResource SystemControlBackgroundTransparentBrush}" />
			<Setter Property="BorderBrush"
					Value="{ThemeResource SystemControlForegroundBaseMediumLowBrush}" />
			<Setter Property="BorderThickness"
					Value="0" />
			<Setter Property="TabNavigation"
					Value="Once" />
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
					Value="Disabled" />
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility"
					Value="Auto" />
			<Setter Property="ScrollViewer.HorizontalScrollMode"
					Value="Disabled" />
			<Setter Property="ScrollViewer.VerticalScrollMode"
					Value="Auto" />
			<Setter Property="ScrollViewer.IsVerticalRailEnabled"
					Value="True" />
			<Setter Property="ScrollViewer.IsDeferredScrollingEnabled"
					Value="False" />
			<Setter Property="ScrollViewer.BringIntoViewOnFocusChange"
					Value="True" />
			<Setter Property="HorizontalContentAlignment"
					Value="Left" />
			<Setter Property="HorizontalAlignment"
					Value="Stretch" />
			<Setter Property="VerticalAlignment"
					Value="Top" />
			<Setter Property="VerticalContentAlignment"
					Value="Center" />
			<Setter Property="IsTextScaleFactorEnabled"
					Value="True" />
			<Setter Property="UseSystemFocusVisuals"
					Value="True" />
			<Setter Property="ItemsPanel">
				<Setter.Value>
					<ItemsPanelTemplate>
						<CarouselPanel />
					</ItemsPanelTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ComboBox">
						<Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal" />
									<VisualState x:Name="PointerOver">
										<VisualState.Setters>
											<Setter Target="BackgroundElement.Background"
													Value="{ThemeResource SystemControlHighlightTransparentBrush}" />
											<Setter Target="SelectedContentPresenter.Foreground"
													Value="{ThemeResource SystemControlHighlightAltBaseMediumHighBrush}" />
											<Setter Target="DropDownGlyph.Fill"
													Value="{ThemeResource SystemControlHighlightAltBaseMediumHighBrush}" />
										</VisualState.Setters>
									</VisualState>
									<VisualState x:Name="Pressed">
										<VisualState.Setters>
											<Setter Target="BackgroundElement.Background"
													Value="{ThemeResource SystemControlHighlightTransparentBrush}" />
											<Setter Target="SelectedContentPresenter.Foreground"
													Value="{ThemeResource SystemControlHighlightAltBaseMediumBrush}" />
											<Setter Target="DropDownGlyph.Fill"
													Value="{ThemeResource SystemControlHighlightAltBaseMediumBrush}" />
										</VisualState.Setters>
									</VisualState>
									<VisualState x:Name="Disabled" />
								</VisualStateGroup>
								<VisualStateGroup x:Name="DropDownStates">
									<VisualState x:Name="Opened">
										<Storyboard>
											<SplitOpenThemeAnimation ClosedTargetName="SelectedContentPresenter"
																	 OffsetFromCenter="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DropDownOffset}"
																	 OpenedLength="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DropDownOpenedHeight}"
																	 OpenedTargetName="PopupBorder" />
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Closed">
										<Storyboard>
											<SplitCloseThemeAnimation ClosedTargetName="SelectedContentPresenter"
																	  OffsetFromCenter="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DropDownOffset}"
																	  OpenedLength="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DropDownOpenedHeight}"
																	  OpenedTargetName="PopupBorder" />
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>
								<Border x:Name="BackgroundElement"
										Grid.ColumnSpan="2"
										Background="{TemplateBinding Background}"
										BorderBrush="{TemplateBinding BorderBrush}"
										BorderThickness="{TemplateBinding BorderThickness}" />
								<!--
                                    This first ContentPresenter must be named "ContentPresenter" because
                                    XAML expects it in the template and has dependencies. It is not used
                                    because we want to style the selected item differently than the items
                                    list but XAML forces the same style.  Do not remove
                                    this element.
                                -->
								<ContentPresenter x:Name="ContentPresenter"
												  Opacity="0" />
								<ContentPresenter x:Name="SelectedContentPresenter"
												  Margin="{TemplateBinding Padding}"
												  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
												  Content="{TemplateBinding SelectedItem}"
												  ContentTemplate="{StaticResource SelectedUnitTemplate}"
												  FlowDirection="{TemplateBinding FlowDirection}" />
								<!--TODO UNO: AutomationProperties.AccessibilityView="Raw"-->
								<Path x:Name="DropDownGlyph"
									  Data="M30.519004,0L32.000998,1.3439932 15.932995,19.049 0,1.4920032 1.481019,0.1489867 15.932995,16.071982z"
									  Fill="{ThemeResource SystemControlForegroundBaseHighBrush}"
									  Stretch="Uniform"
									  Width="12"
									  IsHitTestVisible="False"
									  HorizontalAlignment="Left"
									  VerticalAlignment="Center"
									  Margin="8,3,12,0"
									  Grid.Column="1" />
								<!--TODO UNO: AutomationProperties.AccessibilityView="Raw"-->
								<Popup x:Name="Popup">
									<Border x:Name="PopupBorder"
											Margin="0,-1,0,-1"
											HorizontalAlignment="Stretch"
											Background="{ThemeResource SystemControlBackgroundChromeMediumLowBrush}"
											BorderBrush="{ThemeResource SystemControlForegroundChromeHighBrush}"
											BorderThickness="{ThemeResource ComboBoxDropdownBorderThickness}">
										<ScrollViewer x:Name="ScrollViewer"
													  MinWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DropDownContentMinWidth}"
													  Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}"
													  BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
													  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
													  HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
													  IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
													  IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
													  IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
													  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
													  VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
													  VerticalSnapPointsAlignment="Near"
													  VerticalSnapPointsType="OptionalSingle"
													  ZoomMode="Disabled">
											<!--TODO UNO: AutomationProperties.AccessibilityView="Raw"-->
											<ItemsPresenter />
										</ScrollViewer>
									</Border>
								</Popup>
							</Grid>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</not_ios:Style>

		<Style x:Key="ValueBaseStyle"
			   BasedOn="{StaticResource CalculationResultStyleL}"
			   TargetType="controls:CalculationResult">
			<Setter Property="Background"
					Value="{ThemeResource SystemControlBackgroundTransparentBrush}" />
			<Setter Property="Foreground"
					Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
			<Setter Property="HorizontalContentAlignment"
					Value="Left" />
			<Setter Property="VerticalContentAlignment"
					Value="Bottom" />
			<Setter Property="FontWeight"
					Value="Light" />
			<Setter Property="MinFontSize"
					Value="{ThemeResource BodyFontSize}" />
		</Style>
		<Style x:Key="ValueLargeStyle"
			   BasedOn="{StaticResource ValueBaseStyle}"
			   TargetType="controls:CalculationResult">
			<Setter Property="MaxFontSize"
					Value="46" />
			<Setter Property="Margin"
					Value="-2,0,0,0" />
			<Setter Property="DisplayMargin"
					Value="0,0,0,12" />
		</Style>
		<Style x:Key="ValueMediumStyle"
			   BasedOn="{StaticResource ValueBaseStyle}"
			   TargetType="controls:CalculationResult">
			<Setter Property="MaxFontSize"
					Value="46" />
			<Setter Property="Margin"
					Value="0,0,0,0" />
			<Setter Property="DisplayMargin"
					Value="0,0,0,4" />
		</Style>
		<Style x:Key="CurrencySymbolBaseStyle"
			   TargetType="TextBlock">
			<Setter Property="FontWeight"
					Value="Light" />
			<Setter Property="HorizontalAlignment"
					Value="Left" />
			<Setter Property="VerticalAlignment"
					Value="Bottom" />
			<Setter Property="Foreground"
					Value="{ThemeResource SystemControlPageTextBaseHighBrush}" />
		</Style>
		<Style x:Key="CurrencySymbolLargeStyle"
			   BasedOn="{StaticResource CurrencySymbolBaseStyle}"
			   TargetType="TextBlock">
			<Setter Property="FontSize"
					Value="32" />
			<Setter Property="Margin"
					Value="0,0,0,17" />
		</Style>
		<Style x:Key="CurrencySymbolMediumStyle"
			   BasedOn="{StaticResource CurrencySymbolBaseStyle}"
			   TargetType="TextBlock">
			<Setter Property="FontSize"
					Value="24" />
			<Setter Property="Margin"
					Value="0,0,0,8" />
		</Style>
		<Style x:Key="CurrencySymbolSmallStyle"
			   BasedOn="{StaticResource CurrencySymbolBaseStyle}"
			   TargetType="TextBlock">
			<Setter Property="FontSize"
					Value="17" />
			<Setter Property="Margin"
					Value="0,0,0,7" />
		</Style>

		<Style x:Key="ValueContainerStyle"
			   TargetType="Grid">
			<!-- TODO UNO <Setter Property="AutomationProperties.AccessibilityView" Value="Raw"/>-->
		</Style>

		<Storyboard x:Key="AnimationStory">
			<!--TODO UNO Storyboard.TargetName="ConverterNumPad"-->
			<DoubleAnimationUsingKeyFrames  Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)">
				<EasingDoubleKeyFrame KeyTime="0"
									  Value="0.92">
					<EasingDoubleKeyFrame.EasingFunction>
						<ExponentialEase EasingMode="EaseOut"
										 Exponent="5" />
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
				<EasingDoubleKeyFrame KeyTime="0:0:0.367"
									  Value="1">
					<EasingDoubleKeyFrame.EasingFunction>
						<ExponentialEase EasingMode="EaseOut"
										 Exponent="5" />
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
			</DoubleAnimationUsingKeyFrames>
			<!--TODO UNO Storyboard.TargetName="ConverterNumPad"-->
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)">
				<EasingDoubleKeyFrame KeyTime="0"
									  Value="0.92">
					<EasingDoubleKeyFrame.EasingFunction>
						<ExponentialEase EasingMode="EaseOut"
										 Exponent="5" />
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
				<EasingDoubleKeyFrame KeyTime="0:0:0.367"
									  Value="1">
					<EasingDoubleKeyFrame.EasingFunction>
						<ExponentialEase EasingMode="EaseOut"
										 Exponent="5" />
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>

		<Storyboard x:Key="TimestampFadeInAnimation">
			<!--TODO UNO Storyboard.TargetName="CurrencyTimestampTextBlock"-->
			<DoubleAnimation Duration="0:0:1"
							 From="0"
							 Storyboard.TargetProperty="Opacity"
							 To="1" />
		</Storyboard>

		<!--
		TODO UNO
		<MenuFlyout x:Key="CalculationResultContextMenu">
			<MenuFlyoutItem x:Name="CopyMenuItem"
                            x:Uid="CopyMenuItem"
                            Click="OnCopyMenuItemClicked"
                            Icon="Copy"/>
			<MenuFlyoutItem x:Name="PasteMenuItem"
                            x:Uid="PasteMenuItem"
                            Click="OnPasteMenuItemClicked"
                            Icon="Paste"/>
		</MenuFlyout>-->
	</UserControl.Resources>

	<Grid x:Name="UnitConverterRootGrid"
		  HorizontalAlignment="Stretch">
		<!--TODO UNO: AutomationProperties.LandmarkType="Main"-->
		<Grid.RowDefinitions>
			<RowDefinition x:Name="RowTopNav"
						   Height="{StaticResource HamburgerHeightGridLength}" />
			<RowDefinition x:Name="RowDisplay1"
						   Height="56*"
						   MinHeight="56" />
			<RowDefinition x:Name="RowUnit1"
						   Height="32*"
						   MinHeight="32" />
			<RowDefinition x:Name="RowDisplay2"
						   Height="56*"
						   MinHeight="56" />
			<RowDefinition x:Name="RowUnit2"
						   Height="32*"
						   MinHeight="32" />
			<RowDefinition x:Name="RowDltrUnits"
						   Height="Auto"
						   MinHeight="48" />
			<RowDefinition x:Name="RowNumPad"
						   Height="272*" />
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition x:Name="GutterLeft"
							  Width="0" />
			<ColumnDefinition x:Name="ColumnLeft"
							  Width="1*" />
			<ColumnDefinition x:Name="ColumnRight"
							  Width="0" />
			<ColumnDefinition x:Name="GutterRight"
							  Width="0" />
		</Grid.ColumnDefinitions>
		<!-- End ConverterNumPad -->

		<VisualStateManager.VisualStateGroups>
			<VisualStateGroup x:Name="Layout">
				<VisualState x:Name="PortraitLayout" />
				<VisualState x:Name="LandscapeLayout">
					<VisualState.StateTriggers>
						<triggers:AspectRatioTrigger ActiveIfEqual="True"
													 NumeratorAspect="Width"
													 Source="{x:Bind}"
													 Threshold="1" />
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="GutterTop.Height"
								Value="0.5*" />
						<Setter Target="GutterBottom.Height"
								Value="0.5*" />
						<Setter Target="GutterLeft.Width"
								Value="48" />
						<Setter Target="GutterRight.Width"
								Value="48" />
						<Setter Target="ColumnLeft.Width"
								Value="1*" />
						<Setter Target="ColumnRight.Width"
								Value="1*" />
						<Setter Target="RowDisplay1.Height"
								Value="4*" />
						<Setter Target="RowUnit1.Height"
								Value="2*" />
						<Setter Target="RowDisplay2.Height"
								Value="4*" />
						<Setter Target="RowUnit2.Height"
								Value="2*" />
						<Setter Target="RowDltrUnits.Height"
								Value="2*" />
						<Setter Target="CurrencyLoadingGrid.(Grid.ColumnSpan)"
								Value="2" />
						<Setter Target="ConverterNumPad.(Grid.Row)"
								Value="1" />
						<Setter Target="ConverterNumPad.(Grid.RowSpan)"
								Value="5" />
						<Setter Target="ConverterNumPad.(Grid.Column)"
								Value="2" />
						<Setter Target="ConverterNumPad.(Grid.ColumnSpan)"
								Value="2" />
						<Setter Target="SupplementaryResults.VerticalAlignment"
								Value="Top" />
						<Setter Target="RowNumPad.MinHeight"
								Value="0" />
						<Setter Target="RowNumPad.Height"
								Value="0" />
					</VisualState.Setters>
				</VisualState>
			</VisualStateGroup>
			<VisualStateGroup x:Name="Sizing">
				<VisualState x:Name="Wide">
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowHeight="768"
										 MinWindowWidth="1280" />
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="Value1.Style"
								Value="{ThemeResource ValueLargeStyle}" />
						<Setter Target="Value2.Style"
								Value="{ThemeResource ValueLargeStyle}" />
						<Setter Target="CurrencySymbol1Block.Style"
								Value="{ThemeResource CurrencySymbolLargeStyle}" />
						<Setter Target="CurrencySymbol2Block.Style"
								Value="{ThemeResource CurrencySymbolLargeStyle}" />
						<Setter Target="Units1.Height"
								Value="44" />
						<Setter Target="Units2.Height"
								Value="44" />
						<Setter Target="ConverterNegateButton.FontSize"
								Value="24" />
						<Setter Target="ClearEntryButtonPos0.FontSize"
								Value="24" />
						<Setter Target="BackSpaceButtonSmall.FontSize"
								Value="24" />
						<Setter Target="NumberPad.ButtonStyle"
								Value="{StaticResource NumericButtonStyle46}" />
					</VisualState.Setters>
				</VisualState>
				<VisualState x:Name="Portrait">
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowHeight="1024"
										 MinWindowWidth="640" />
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="SupplementaryResults.VerticalAlignment"
								Value="Top" />
						<Setter Target="Value1.Style"
								Value="{ThemeResource ValueLargeStyle}" />
						<Setter Target="Value2.Style"
								Value="{ThemeResource ValueLargeStyle}" />
						<Setter Target="CurrencySymbol1Block.Style"
								Value="{ThemeResource CurrencySymbolLargeStyle}" />
						<Setter Target="CurrencySymbol2Block.Style"
								Value="{ThemeResource CurrencySymbolLargeStyle}" />
						<Setter Target="Units1.Height"
								Value="44" />
						<Setter Target="Units2.Height"
								Value="44" />
						<Setter Target="ConverterNegateButton.FontSize"
								Value="{StaticResource CalcStandardOperatorCaptionSize}" />
						<Setter Target="ClearEntryButtonPos0.FontSize"
								Value="{StaticResource CalcStandardOperatorCaptionSize}" />
						<Setter Target="NumberPad.ButtonStyle"
								Value="{StaticResource NumericButtonStyle34}" />
					</VisualState.Setters>
				</VisualState>
				<VisualState x:Name="Wide640">
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowHeight="0"
										 MinWindowWidth="640" />
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="Value1.Style"
								Value="{ThemeResource ValueLargeStyle}" />
						<Setter Target="Value2.Style"
								Value="{ThemeResource ValueLargeStyle}" />
						<Setter Target="CurrencySymbol1Block.Style"
								Value="{ThemeResource CurrencySymbolLargeStyle}" />
						<Setter Target="CurrencySymbol2Block.Style"
								Value="{ThemeResource CurrencySymbolLargeStyle}" />
						<Setter Target="Units1.Height"
								Value="44" />
						<Setter Target="Units2.Height"
								Value="44" />
						<Setter Target="ConverterNegateButton.FontSize"
								Value="{StaticResource CalcStandardOperatorCaptionSize}" />
						<Setter Target="ClearEntryButtonPos0.FontSize"
								Value="{StaticResource CalcStandardOperatorCaptionSize}" />
						<Setter Target="BackSpaceButtonSmall.FontSize"
								Value="{StaticResource CalcStandardOperatorCaptionSize}" />
						<Setter Target="NumberPad.ButtonStyle"
								Value="{StaticResource NumericButtonStyle34}" />
					</VisualState.Setters>
				</VisualState>
				<VisualState x:Name="MinSizeLayout">
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowHeight="{StaticResource AppMinWindowHeight}"
										 MinWindowWidth="{StaticResource AppMinWindowWidth}" />
					</VisualState.StateTriggers>
				</VisualState>
				<VisualState x:Name="DefaultLayout">
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowHeight="0"
										 MinWindowWidth="0" />
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="ClearEntryButtonPos0.Margin"
								Value="1" />
						<Setter Target="BackSpaceButtonSmall.Margin"
								Value="1" />
						<Setter Target="ConverterNegateButton.Margin"
								Value="1" />

						<Setter Target="NumberPad.ButtonStyle"
								Value="{StaticResource NumericButtonStyle18}" />
					</VisualState.Setters>
				</VisualState>
			</VisualStateGroup>
			<VisualStateGroup x:Name="CurrencyTimestampStates">
				<VisualState x:Name="DefaultTimestamp">
					<VisualState.Setters>
						<Setter Target="CurrencyTimestampTextBlock.Foreground"
								Value="{ThemeResource SystemControlPageTextBaseHighBrush}" />
						<Setter Target="CurrencyTimestampTextBlock.FontWeight"
								Value="Normal" />
					</VisualState.Setters>
				</VisualState>
				<VisualState x:Name="WeekOldTimestamp">
					<VisualState.Setters>
						<Setter Target="CurrencyTimestampTextBlock.Foreground"
								Value="{ThemeResource AppControlPageTextRedColorBrush}" />
						<Setter Target="CurrencyTimestampTextBlock.FontWeight"
								Value="SemiBold" />
					</VisualState.Setters>
				</VisualState>
			</VisualStateGroup>
			<VisualStateGroup x:Name="CurrencySecondaryStatusStates">
				<VisualState x:Name="ChargesMayApplyCurrencyStatus">
					<VisualState.Setters>
						<Setter Target="CurrencySecondaryStatus.Foreground"
								Value="{ThemeResource AppControlPageTextBaseHighColorBrush}" />
					</VisualState.Setters>
				</VisualState>
				<VisualState x:Name="FailedCurrencyStatus">
					<VisualState.Setters>
						<Setter Target="CurrencySecondaryStatus.Foreground"
								Value="{ThemeResource AppControlPageTextRedColorBrush}" />
					</VisualState.Setters>
				</VisualState>
			</VisualStateGroup>
			<VisualStateGroup x:Name="CurrencySymbolStates">
				<VisualState x:Name="CurrencySymbolLeftState" />
				<VisualState x:Name="CurrencySymbolRightState">
					<VisualState.Setters>
						<Setter Target="CurrencySymbol1Block.Padding"
								Value="0,0,12,0" />
						<Setter Target="CurrencySymbol2Block.Padding"
								Value="0,0,12,0" />
						<Setter Target="CurrencySymbol1Block.(Grid.Column)"
								Value="2" />
						<Setter Target="CurrencySymbol2Block.(Grid.Column)"
								Value="2" />
					</VisualState.Setters>
				</VisualState>
			</VisualStateGroup>
		</VisualStateManager.VisualStateGroups>

		<Grid x:Name="CurrencyLoadingGrid"
			  Grid.Row="1"
			  Grid.RowSpan="5"
			  Grid.Column="0"
			  Grid.ColumnSpan="4"
			  Visibility="{x:Bind Model.IsCurrencyLoadingVisible, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
			<Grid.RowDefinitions>
				<RowDefinition Height="10*" />
				<RowDefinition Height="7*" />
				<RowDefinition Height="10*" />
			</Grid.RowDefinitions>
			<muxc:ProgressRing x:Name="CurrencyLoadingProgressRingMUX"
						  Grid.Row="1"
						  Grid.Column="1"
						  MaxWidth="140"
						  MaxHeight="140"
						  HorizontalAlignment="Stretch"
						  VerticalAlignment="Stretch"
						  IsActive="False"
						  x:Load="{x:Bind Model.CanUseMUX}" />
			<ProgressRing x:Name="CurrencyLoadingProgressRingWUX"
						  Grid.Row="1"
						  Grid.Column="1"
						  MaxWidth="140"
						  MaxHeight="140"
						  HorizontalAlignment="Stretch"
						  VerticalAlignment="Stretch"
						  IsActive="False"
						  x:Load="{x:Bind Model.CanUseWUX}" />
		</Grid>

		<!--TODO UNO: HorizontalAlignment="{x:Bind FlowDirectionHorizontalAlignment}" -->
		<Grid x:Name="Value1Container"
			  Grid.Row="1"
			  Grid.Column="1"
			  HorizontalAlignment="Stretch"
			  Style="{ThemeResource ValueContainerStyle}"
			  Visibility="{x:Bind Model.IsCurrencyLoadingVisible, Mode=OneWay, Converter={StaticResource BooleanToVisibilityNegationConverter}}">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>
			<TextBlock x:Name="CurrencySymbol1Block"
					   Grid.Column="0"
					   Padding="12,0,0,0"
					   Style="{ThemeResource CurrencySymbolMediumStyle}"
					   Text="{x:Bind Model.CurrencySymbol1, Mode=OneWay}"
					   Visibility="{x:Bind Model.CurrencySymbolVisibility, Mode=OneWay}" />
			<!--TODO UNO: AutomationProperties.AccessibilityView="Raw"-->
			<controls:CalculationResult x:Name="Value1"
										Grid.Column="1"
										Style="{ThemeResource ValueMediumStyle}"
										ContextCanceled="OnContextCanceled"
										ContextRequested="OnContextRequested"
										DisplayValue="{x:Bind Model.Value1, Mode=OneWay}"
										ExpressionVisibility="Collapsed"
										FlowDirection="{x:Bind LayoutDirection}"
										FontSize="{StaticResource CalcResultFontSizeM}"
										IsActive="{Binding Value1Active, Mode=TwoWay}"
										KeyDown="OnValueKeyDown"
										ValueSelected="OnValueSelected"
										TabIndex="1" />
			<!--TODO UNO
			                                        AutomationProperties.AutomationId="Value1"
                                        AutomationProperties.Name="{x:Bind Model.Value1AutomationName, Mode=OneWay}"-->
		</Grid>

		<ComboBox x:Name="Units1"
				  Grid.Row="2"
				  Grid.Column="1"
				  HorizontalAlignment="{x:Bind FlowDirectionHorizontalAlignment}"
				  Style="{ThemeResource ComboStyle}"
				  DropDownClosed="UpdateDropDownState"
				  DropDownOpened="UpdateDropDownState"
				  FlowDirection="{x:Bind LayoutDirection}"
				  IsEnabled="{Binding IsDropDownEnabled}"
				  IsEnabledChanged="Units1_IsEnabledChanged"
				  ItemTemplate="{StaticResource UnitTemplate}"
				  ItemsSource="{Binding Units}"
				  SelectedItem="{Binding Unit1, Mode=TwoWay}"
				  TabIndex="2"
				  Visibility="{x:Bind Model.IsCurrencyLoadingVisible, Mode=OneWay, Converter={StaticResource BooleanToVisibilityNegationConverter}}" />
		<!--TODO UNO
		ItemsSource="{Binding Units, Converter={StaticResource AlwaysSelectedConverter}}"
		SelectedItem="{Binding Unit1, Mode=TwoWay, Converter={StaticResource ValidSelectedItemConverter}}"
		AutomationProperties.AutomationId="Units1"
                  AutomationProperties.Name="{x:Bind Model.Unit1AutomationName, Mode=OneWay}"-->

		<!--TODO UNO: HorizontalAlignment="{x:Bind FlowDirectionHorizontalAlignment}" -->
		<Grid x:Name="Value2Container"
			  Grid.Row="3"
			  Grid.Column="1"
			  HorizontalAlignment="Stretch"
			  Style="{ThemeResource ValueContainerStyle}"
			  Visibility="{x:Bind Model.IsCurrencyLoadingVisible, Mode=OneWay, Converter={StaticResource BooleanToVisibilityNegationConverter}}">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>
			<TextBlock x:Name="CurrencySymbol2Block"
					   Grid.Column="0"
					   Padding="12,0,0,0"
					   Style="{ThemeResource CurrencySymbolMediumStyle}"
					   Text="{x:Bind Model.CurrencySymbol2, Mode=OneWay}"
					   Visibility="{x:Bind Model.CurrencySymbolVisibility, Mode=OneWay}" />
			<!--TODO UNO AutomationProperties.AccessibilityView="Raw"-->
			<controls:CalculationResult x:Name="Value2"
										Grid.Column="1"
										Style="{ThemeResource ValueMediumStyle}"
										ContextCanceled="OnContextCanceled"
										ContextRequested="OnContextRequested"
										DisplayValue="{x:Bind Model.Value2, Mode=OneWay}"
										ExpressionVisibility="Collapsed"
										FlowDirection="{x:Bind LayoutDirection}"
										FontSize="{StaticResource CalcResultFontSizeM}"
										IsActive="{Binding Value2Active, Mode=TwoWay}"
										KeyDown="OnValueKeyDown"
										ValueSelected="OnValueSelected"
										TabIndex="3" />
			<!--TODO UNO
			AutomationProperties.AutomationId="Value2"
                                        AutomationProperties.LiveSetting="Polite"
                                        AutomationProperties.Name="{x:Bind Model.Value2AutomationName, Mode=OneWay}"-->
		</Grid>

		<ComboBox x:Name="Units2"
				  Grid.Row="4"
				  Grid.Column="1"
				  HorizontalAlignment="{x:Bind FlowDirectionHorizontalAlignment}"
				  Style="{ThemeResource ComboStyle}"
				  DropDownClosed="UpdateDropDownState"
				  DropDownOpened="UpdateDropDownState"
				  FlowDirection="{x:Bind LayoutDirection}"
				  IsEnabled="{Binding IsDropDownEnabled}"
				  ItemTemplate="{StaticResource UnitTemplate}"
				  ItemsSource="{Binding Units}"
				  SelectedItem="{Binding Unit2, Mode=TwoWay}"
				  TabIndex="4"
				  Visibility="{x:Bind Model.IsCurrencyLoadingVisible, Mode=OneWay, Converter={StaticResource BooleanToVisibilityNegationConverter}}" />
		<!--TODO UNO:
		ItemsSource="{Binding Units, Converter={StaticResource AlwaysSelectedConverter}}"
		SelectedItem="{Binding Unit2, Mode=TwoWay, Converter={StaticResource ValidSelectedItemConverter}}"
		AutomationProperties.AutomationId="Units2"
                  AutomationProperties.Name="{x:Bind Model.Unit2AutomationName, Mode=OneWay}"-->

		<StackPanel x:Name="SupplementaryResultsPanelInGrid"
					Grid.Row="5"
					Grid.Column="1"
					MinHeight="48"
					Padding="12,0,6,0"
					HorizontalAlignment="{x:Bind FlowDirectionHorizontalAlignment}"
					VerticalAlignment="Top"
					FlowDirection="{x:Bind LayoutDirection}"
					SizeChanged="SupplementaryResultsPanelInGrid_SizeChanged"
					Visibility="{x:Bind Model.IsCurrencyLoadingVisible, Mode=OneWay, Converter={StaticResource BooleanToVisibilityNegationConverter}}">
			<local:SupplementaryResults x:Name="SupplementaryResults"
										HorizontalAlignment="Left"
										VerticalAlignment="Center"
										Results="{x:Bind Model.SupplementaryResults, Mode=OneWay}"
										Visibility="{x:Bind Model.SupplementaryVisibility, Mode=OneWay}" />
			<StackPanel Visibility="{x:Bind Model.IsCurrencyCurrentCategory, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
				<!-- Currency Ratio Equality -->
				<TextBlock x:Name="CurrencyRatioEqualityBlock"
						   Style="{ThemeResource CaptionTextBlockStyle}"
						   Foreground="{ThemeResource SystemControlPageTextBaseHighBrush}"
						   AutomationProperties.Name="{x:Bind Model.CurrencyRatioEqualityAutomationName, Mode=OneWay}"
						   Text="{x:Bind Model.CurrencyRatioEquality, Mode=OneWay}" />

				<!-- Currency Timestamp -->
				<TextBlock x:Name="CurrencyTimestampTextBlock"
						   Style="{ThemeResource CaptionTextBlockStyle}"
						   Text="{x:Bind Model.CurrencyTimestamp, Mode=OneWay}" />

				<!-- Currency Refresh button and additional status text -->
				<ContentControl x:Name="CurrencyRefreshBlockControl"
								IsTabStop="False"
								TabIndex="5"
								Visibility="Collapsed">
					<StackPanel>
						<StackPanel Orientation="Horizontal">
							<HyperlinkButton x:Name="CurrencyRefreshBlock"
											x:Uid="RefreshButtonText"
											Foreground="{ThemeResource SystemControlHyperlinkBaseHighBrush}"
											VerticalContentAlignment="Center"
											Click="CurrencyRefreshButton_Click" />

							<TextBlock 
									Margin="5,1,0,0" 
									FontStyle="Italic"
									VerticalAlignment="Center"
									Foreground="{ThemeResource SystemControlHyperlinkBaseHighBrush}">
								(Rates by <Hyperlink NavigateUri="https://www.exchangerate-api.com" Foreground="{ThemeResource SystemControlHyperlinkBaseHighBrush}">Exchange Rate API</Hyperlink>)
							</TextBlock>
						</StackPanel>
						<TextBlock Margin="3,6,0,0"
								Style="{ThemeResource CaptionTextBlockStyle}">
							<Run x:Name="CurrencySecondaryStatus"
								Text="" />
						</TextBlock>
					</StackPanel>
				</ContentControl>

				<!-- Offline TextBlock -->
				<ContentControl x:Name="OfflineBlock"
								IsTabStop="False"
								TabIndex="5"
								Visibility="Collapsed">
					<TextBlock Style="{ThemeResource CaptionTextBlockStyle}"
							   Foreground="{ThemeResource SystemControlPageTextBaseHighBrush}"
							   AutomationProperties.AccessibilityView="Raw">
                        <Run x:Name="OfflineRunBeforeLink" />
                        <Hyperlink NavigateUri="ms-settings:network-status">
                            <Run x:Name="OfflineRunLink" />
                        </Hyperlink>
                        <Run x:Name="OfflineRunAfterLink" />
					</TextBlock>
				</ContentControl>
			</StackPanel>
		</StackPanel>

		<Grid x:Name="ConverterNumPad"
			  Grid.Row="6"
			  Grid.Column="1"
			  Margin="0,0,0,6"
			  FlowDirection="LeftToRight"
			  RenderTransformOrigin="0.5,0.5">
			<Grid.RenderTransform>
				<CompositeTransform />
			</Grid.RenderTransform>
			<Grid.RowDefinitions>
				<RowDefinition x:Name="GutterTop"
							   Height="0" />
				<RowDefinition Height="1*" />
				<RowDefinition Height="1*" />
				<RowDefinition Height="1*" />
				<RowDefinition Height="1*" />
				<RowDefinition Height="1*" />
				<RowDefinition x:Name="GutterBottom"
							   Height="0" />
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="0.25*" />
				<ColumnDefinition Width="1*" />
				<ColumnDefinition Width="1*" />
				<ColumnDefinition Width="1*" />
				<ColumnDefinition Width="0.25*" />
			</Grid.ColumnDefinitions>
			<Grid x:Uid="DisplayControls"
				  Grid.Row="1"
				  Grid.Column="2"
				  Grid.ColumnSpan="2"
				  AutomationProperties.HeadingLevel="Level1">
				<Grid.ColumnDefinitions>
					<ColumnDefinition />
					<ColumnDefinition />
				</Grid.ColumnDefinitions>
				<controls:CalculatorButton x:Name="ClearEntryButtonPos0"
										   x:Uid="clearEntryButton"
										   HorizontalAlignment="Stretch"
										   Style="{StaticResource OperatorButtonStyle}"
										   FontSize="16"
										   ButtonId="Clear"
										   Content="CE"
										   TabIndex="7" />
				<controls:CalculatorButton x:Name="BackSpaceButtonSmall"
										   x:Uid="backSpaceButton"
										   Grid.Column="1"
										   Style="{StaticResource SymbolOperatorButtonStyle}"
										   FontSize="16"
										   ButtonId="Backspace"
										   Content="&#xE94F;"
										   TabIndex="8" />
			</Grid>

			<local:NumberPad x:Name="NumberPad"
                             x:Uid="NumberPad"
                             Grid.Row="2"
                             Grid.RowSpan="4"
                             Grid.Column="1"
                             Grid.ColumnSpan="3"
                             VerticalAlignment="Stretch"
                             AutomationProperties.HeadingLevel="Level1"
                             ButtonStyle="{StaticResource NumericButtonStyle24}"
							 DecimalButtonStyle="{StaticResource DecimalButtonStyle}"
                             TabIndex="10"
                             TabNavigation="Local"/>
			<controls:CalculatorButton x:Name="ConverterNegateButton"
									   x:Uid="converterNegateButton"
									   Grid.Row="5"
									   Grid.Column="1"
									   Style="{StaticResource SymbolOperatorButtonStyle}"
									   FontSize="16"
									   ButtonId="Negate"
									   Content="&#xe94d;"
									   TabIndex="6"
									   Visibility="{x:Bind Model.CurrentCategory.NegateVisibility, Mode=OneWay}" />
		</Grid>
		<!-- End ConverterNumPad -->
	</Grid>
</UserControl>
